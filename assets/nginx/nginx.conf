events {
    worker_connections 1024;
}

http {
    # Add MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Define upstream servers
    upstream minio_s3 {
        least_conn;
        server minio:9000;
    }

    upstream minio_console {
        least_conn;
        server minio:9001;
    }

    server {
        listen 80;
        server_name localhost;

        # Allow special characters in headers
        ignore_invalid_headers off;
        # Allow any size file to be uploaded
        client_max_body_size 0;
        # Disable buffering
        proxy_buffering off;
        proxy_request_buffering off;

        location / {
            # CORS settings
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header 'Access-Control-Allow-Headers' '*' always;

            # Security headers
            proxy_hide_header X-Frame-Options;
            proxy_hide_header Content-Security-Policy;
            proxy_hide_header X-XSS-Protection;
            
            add_header X-Frame-Options "ALLOWALL" always;
            add_header Content-Security-Policy "frame-ancestors * 'self' file://* http://* https://*; default-src * 'unsafe-inline' 'unsafe-eval'; connect-src * ws: wss:;" always;

            # Proxy headers
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Cookie settings
            proxy_cookie_path / "/; SameSite=None; Secure=false";
            proxy_cookie_flags ~ SameSite=None Secure=false;

            # Websocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            proxy_connect_timeout 300;
            chunked_transfer_encoding off;

            proxy_pass http://minio_console/;
        }

        location /api/ {
            # CORS preflight
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
                add_header 'Access-Control-Allow-Headers' '*' always;
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            # Same headers as root location
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header X-Frame-Options "ALLOWALL" always;
            add_header Content-Security-Policy "frame-ancestors * 'self' file://* http://* https://*; default-src * 'unsafe-inline' 'unsafe-eval'; connect-src * ws: wss:;" always;

            proxy_hide_header X-Frame-Options;
            proxy_hide_header Content-Security-Policy;
            proxy_hide_header X-XSS-Protection;

            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_cookie_path / "/; SameSite=None; Secure=false";
            proxy_cookie_flags ~ SameSite=None Secure=false;

            proxy_pass http://minio_console/api/;
        }
    }
}   